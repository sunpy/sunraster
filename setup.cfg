[metadata]
name = sunraster
provides = sunraster
description = sunraster is an open-source Python library that provides the tools to read in and analyze spectrogram data.
long_description = file: README.rst
long_description_content_type = text/x-rst
author = The SunPy Community
author_email = sunpy@googlegroups.com
license = BSD 2-Clause
license_file = LICENSE.rst
url = https://docs.sunpy.org/projects/sunraster/en/stable/
edit_on_github = True
github_project = sunpy/sunraster
platform = any
keywords = solar physics, solar, science, sun, wcs, coordinates, spectra, raster
classifiers =
  Development Status :: 5 - Production/Stable
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Natural Language :: English
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: 3.11
  Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
python_requires = >=3.8
packages = find:
include_package_data = True
setup_requires =
  setuptools_scm
install_requires =
  numpy
  astropy
  ndcube[plotting]>=2.0.1

[options.extras_require]
instr =
  sunpy>=4.0.0
tests =
  pytest-astropy
docs =
  sphinx
  sphinx_automodapi
  sphinx-changelog
  sphinx-gallery
  sunpy-sphinx-theme
  # Not a direct dependency, but we need to pin this until sphinx-changelog is updated (see #6668)
  towncrier<22.12.0

[options.packages.find]
exclude = sunraster._dev

[tool:pytest]
testpaths = "sunraster" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples" ".history" "sunraster[\/]_dev"
doctest_plus = enabled
doctest_optionflags = NORMALIZE_WHITESPACE FLOAT_CMP ELLIPSIS
text_file_format = rst
addopts = --doctest-rst --doctest-ignore-import-errors -p no:unraisableexception -p no:threadexception
markers =
    online: marks this test function as needing online connectivity.
remote_data_strict = True
filterwarnings =
    error
    # Do not fail on pytest config issues (i.e. missing plugins) but do show them
    always::pytest.PytestConfigWarning
    #
    # A list of warnings to ignore follows. If you add to this list, you MUST
    # add a comment or ideally a link to an issue that explains why the warning
    # is being ignored
    #
    #
    # This is due to dependencies building with a numpy version different from
    # the local installed numpy version, but should be fine
    # See https://github.com/numpy/numpy/issues/15748#issuecomment-598584838
    ignore:numpy.ufunc size changed:RuntimeWarning
    ignore:numpy.ndarray size changed:RuntimeWarning
    ignore:invalid value encountered in sqrt:RuntimeWarning
    # FITS header issues
    ignore::astropy.wcs.wcs.FITSFixedWarning
    ignore::astropy.io.fits.verify.VerifyWarning
    # https://github.com/astropy/astropy/issues/11309
    ignore:target cannot be converted to ICRS, so will not be set on SpectralCoord
    # test_ndcube_components_after_slicing raises this and it is unclear if its a problem.
    ignore: invalid value encountered in true_divide
    # https://github.com/pytest-dev/pytest-cov/issues/557
    ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning

[pycodestyle]
max_line_length = 120

[flake8]
max-line-length = 120
exclude =
    .git,
    __pycache__,
    docs/conf.py,
    build,
rst-directives =
    plot

[isort]
balanced_wrapping = True
default_section = THIRDPARTY
include_trailing_comma = True
known_sunraster = sunraster
length_sort = False
length_sort_sections=stdlib
line_length = 120
multi_line_output = 3
no_lines_before = LOCALFOLDER
sections = FUTURE, STDLIB, THIRDPARTY, SUNRASTER, FIRSTPARTY, LOCALFOLDER

[coverage:run]
omit =
  sunraster/conftest.py
  sunraster/cython_version*
  sunraster/*setup*
  sunraster/extern/*
  sunraster/*/tests/*
  sunraster/version*
  sunraster/__init__*
  */sunraster/conftest.py
  */sunraster/cython_version*
  */sunraster/*setup*
  */sunraster/extern/*
  */sunraster/*/tests/*
  */sunraster/version*
  */sunraster/__init__*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
